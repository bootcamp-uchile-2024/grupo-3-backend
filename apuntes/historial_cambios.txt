=========================================================================================================================
Versión 1.11.0 

    Cambios:
        - Pedido: 
            Post /pedidos/{idUsuario}
            CreatePedidoDto ya no tiene las propiedades "idCarro" ni "idUsuario"
            Ahora el Post /pedidos tiene un param -> /pedidos/{idUsuario}
            El Post cierra el Carro del usuario y le asigna un carro nuevo activo (sin fecha de cierre).
            Tabla nueva: productos_pedido
        - Productos:
            Propiedad "cantidad" a "stock"
        
        ++ Agregado archivo SQL V0.0.11


=========================================================================================================================
Versión 1.11.1
    Cambios:
        - Producto.planta:

            Tablas nuevas: plantas_tolerancia_temperatura, plantas_tamaño, plantas_entorno, plantas_iluminacion.
            Columnas eliminadas: id_especie, tolerancia_temperatura, altura.
            Columnas nuevas: id_tamaño, id_entorno, id_iluminacion, id_tolerancia_temperatura, especie.

            Eliminado: idEspecie, altura
            Agregado: especie(string), tamano(string), idTamano(number), iluminacion(string), idIluminacion(number),
                toleranciaTemperatura(string), idToleranciaTemperatura(number), entorno(string), idEntorno(number)

        - Pedidos:

            Tabla nueva: direcciones_envio
            Columna nueva: receptor varchar(50)
            DTO nuevo: CreateDireccionEnvioDto
            DTO Pedido: direccionEnvio: CreateDireccionEnvioDto
            Agregado: receptor(string)

            Pausados métodos GET, PATCH, DELETE
        
        - Carro compras:
        
            DTO nuevo: NoStockCarroProductosDto <- Contiene todos los productos de un carro cuyo stock es insuficiente. Contiene además la cantidad máxima por producto.

            Agregado: POST carro-compras/validateProductosCarro/{idCarro}
                Valida el stock del contenido de un carro de compras:
                    Si el stock es suficiente para todos los productos, reemplaza todo el carro de compras en Back por el carro entrante.
                    Si no hay stock de uno o más productos, retorna un error con un objeto { productosEnConflicto: [productosCantidad] } dentro del "response"

        ++ Agregado archivo SQL V0.0.12


=========================================================================================================================
Versión 1.11.3
**Versión actual en AWS**
    
    Cambios:
        - Catálogo:

            Se agregó un query opcional para los filtros:
                idEntorno, petFriendly, idIluminacion, idTipoRiego, idToleranciaTemperatura
            Y orden de catálogo:
                maxPrecio, minPrecio, ordenarPor, puntuacion
        
            Ahora el catálogo solo retorna productos tipo planta
    
        - Aut:

            Se agregó la posibilidad de trabajar con JWT e integrar permisos.
        
        - Reviews:

            Agregado servicio de reviews: POST, GET por producto y GET por usuario
    
        ++ Agregado archivo SQL V0.0.13 y  V0.0.14

=========================================================================================================================
Versión 1.11.4

    Cambios
        - Productos: Ahora hay imágenes múltiples

            Agregado: producto.imagenes
            Eliminado: producto.imagen

            La propiedad imagenes es un array de JSONs, que contiene la ruta de cada imagen y el id del producto.

            Agregado GET productos/admin, con query para obtener los productos paginados. Retorna todos los productos.

            Se eliminó el endpoint PATCH productos/updateProductImage

            Cambio en el DELETE removeProductImage/idProducto/indiceImagen
                Como ahora hay varias imágenes por producto, para eliminar una imagen del arreglo hay que enviar el índice de la imagen
                (partiendo desde índice 0)

    ++ Agregado archivo SQL V0.0.15

=========================================================================================================================
Versión 1.11.5

    Cambios
        - Usuarios:
            Ahora funciona el GET /usuarios/pedidos/idUsuario
            Retorna los pedidos de un usuario, funciona como un historial de compras.
        
        - Catálogo:
            Incluido el idTamano en el query

            GET catalogo/search
            Para buscar con texto por nombre
        
        - Pedidos:
            Ahora al crear un pedido se aumenta la propiedad "unidadesVendidas" de los productos.
